name: Terraform
on:
  push:
    branches:
      - main
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
  
env:
  AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
  AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}
  AWS_REGION: us-east-1
  AWS_BUCKET: ${{secrets.AWS_BUCKET}}
  AWS_CLUSTER: vprofile-eks

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: terraform setup
        uses: hashicorp/setup-terraform@v3

      - name: terraform init
        id: init
        run: terraform init -backend-config="bucket=$AWS_BUCKET"

      - name: terraform validate
        id: validate
        run: terraform validate

      - name: terraform format
        id: fmt
        run: terraform fmt -check

      - name: terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile

      - name: plan check status
        id: status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: terraform apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      - name: aws confiure
        id: configure

        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-region: ${{env.AWS_REGION}}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}

      - name: kube config
        if: steps.apply.outcome == 'success'
        id: kubeconfig
        run: aws eks update-kubeconfig --region ${{env.AWS_REGION}} --name ${{env.AWS_CLUSTER}}

      - name: ingress config
        id: ingress
        if: steps.apply.outcome == 'success' && steps.kubeconfig.outcome == 'success'
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.10.1/deploy/static/provider/aws/deploy.yaml
