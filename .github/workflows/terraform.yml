name: "Vprofile IAC"
on:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STAGE: ${{ secrets.BUCKET_TF_STAGE }}
  AWS_REGION: us-east-2
  EKS_CLUSTER: vprofile-eks

jobs:
  terraform: 
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults: 
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      # https://github.com/marketplace?category=&type=actions&verification=&query=checkout
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: 1.6.3

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STAGE"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
        # if the format of the code is not correct, it will return non-zero exit code and will fail the workflow
        # then someone needs to make the correct format of the code, then again, commit the code.

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input -out planfile
        # -no-color: save some GPU
        # -input: not passing any input
        # -out planfile: avoid the parralle execution Terraform. This is to avoid bug in github action
        continue-on-error: true
        # we have a different way of failing this. Because we cannot really rely on this.

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        # if that variable value is failure, then we will execute command exit one, or anything that you can give, anything apart from zero
        # When exit gets executed, it is going to kill that container and the workflow fail.
        run: exit 1

